set -x
set -e

export LC_ALL=C

source /common.sh
install_cleanup_trap

# Scripts run as root by default


# This script clones the websockify repo and installs all dependencies


# INSTALL DEPENDENCIES ----------------------------------------------------------------------------------------------------------------------------------------
# Put the raspi-firmware and linux packages on hold (exclude from updated) as it requires /boot/fimrware to be present, but that is not the case until the first real boot!
apt-mark hold raspi-firmware linux-headers* linux-image*

apt-get install -y python3-numpy nginx

apt-mark unhold raspi-firmware linux-headers* linux-image*


# CHECKOUT WEBSOCKIFY AND SETUP AUTOSTART ---------------------------------------------------------------------------------------------------------------------
cd /home/$RASPI_USER
git clone --depth 1 --branch v0.11.0 https://github.com/novnc/websockify.git
cd websockify
python setup.py install

# websockify should now be installed in /usr/local/bin/
which websockify

# Start websockify at boot in the rc.local file (the sed command inserts the websockify line before the last line, that is what $i does)
# websockify runs in daemon mode, listens on port 5901 and proxies from localhost port 5900 - VNC
sed -i -e '$i websockify -v 5901 127.0.0.1:5900\n\n' /etc/rc.local


# SETUP NGINX -------------------------------------------------------------------------------------------------------------------------------------------------
# Setup nginx to proxy the Lab-Box Display Software and the websockify websocket endpoint
# noVNC (used in the Lab-Box Website) needs a secure connection for the webpage and also the websocket connection must be secure to satisfy modern browsers
# We create a self-signed certificate, backup the nginx default config and overwrite it with our own.
# The config redirects the user to the https version and also proxies the websocket

sudo openssl req -x509 -nodes -days 36500 -keyout /etc/ssl/private/nginx-selfsigned.key -out /etc/ssl/certs/nginx-selfsigned.crt -subj '/CN=lab-box/O=Lab-Box./C=DE'
cp /etc/nginx/sites-available/default /etc/nginx/sites-available/default_backup
cat <<EOF > /etc/nginx/sites-enabled/default
# SSL Redirect
server {
	listen 80       default;
	return 301      https://$host$request_uri;
}

server {
	listen                443 ssl default_server;
	listen                [::]:443 ssl default_server;
	server_name           main;
	client_max_body_size  200M;

	ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
	ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

	location / {
		proxy_pass                          http://127.0.0.1:8080;
		proxy_set_header                    Host $host;
		proxy_set_header X-Forwarded-Host   $server_name;
		proxy_set_header X-Real-IP          $remote_addr;
	}

	location /websockify {
		proxy_pass                          http://127.0.0.1:5901;
		proxy_http_version                  1.1;
		proxy_set_header                    Upgrade $http_upgrade;
		proxy_set_header                    Connection "Upgrade";
		proxy_read_timeout                  600s;
		proxy_buffering                     off;
	}
}
EOL



# SETUP REALVNC TO BE COMPATIBLE WITH noVNC -------------------------------------------------------------------------------------------------------------------
# This config sets the neccesary encryption for noVNC to connect and allows multiple users to be connected at the same time
# Overview over all parameters here: https://help.realvnc.com/hc/en-us/articles/360002251297-RealVNC-Server-Parameter-Reference
# Paths for config files here: https://help.realvnc.com/hc/en-us/articles/360002253878-Configuring-RealVNC-Connect-Using-Parameters#populating-configuration-files-with-parameters-0-2
cat <<EOF > /etc/vnc/config.d/common.custom
Encryption=PreferOn
AlwaysShared=True
DisconnectClients=False
NeverShared=False
EOF
