name: "Create Image"

on: 
  workflow_dispatch:
    inputs:
      labbox-python-software-version:
        description: "Lab-Box Python Software Version"
        required: true
        default: ''

jobs:
  build:
    name: "Build Image"
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout Repo"
      uses: actions/checkout@v3

    - name: "Download RPi image"
      id: download_rpi_image
      run: |
        ls
        mkdir build
        cd build
        # TODO: 64 BIT IMAGE MAKES PROBLEM WITH CustoPiZer/chroot IN THE GITHUB RUNNER. NEED TO INVESTIGATE
        # wget https://downloads.raspberrypi.com/raspios_arm64/images/raspios_arm64-2024-03-15/2024-03-15-raspios-bookworm-arm64.img.xz -q -O input.img.xz
        # Download 32bit image
        wget https://downloads.raspberrypi.com/raspios_armhf/images/raspios_armhf-2024-03-15/2024-03-15-raspios-bookworm-armhf.img.xz -q -O input.img.xz
        unxz -f input.img.xz
        ls

    - name: "Run CustoPiZer"
      uses: OctoPrint/CustoPiZer@1.2.0
      with:
        workspace: "${{ github.workspace }}/build"
        scripts:  "${{ github.workspace }}/workspace/scripts"
        config: "${{ github.workspace }}/config.local"
        environment: '{ }'

    - name: "Prepare release"
      run: |        
        # release body
        cat <<EOF > ./build/release.md
  
          * Lab-Box RasPi Touch Display Module

        Created with [CustoPiZer](https://github.com/OctoPrint/CustoPiZer)

        <!-- mark:untested -->
        EOF
        
    - name: "Rename image LW"
      run: |
        IMAGE_NAME="lab-box_raspi_touch_display_module_image.img"
        echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
        IMAGE_NAME_ZIP="lab-box_raspi_touch_display_module_image.zip"
        echo "IMAGE_NAME_ZIP=$IMAGE_NAME_ZIP" >> $GITHUB_ENV
        cd build
        mv output.img $IMAGE_NAME
        
    - name: "Package the image"
      id: package-image
      uses: OctoPrint/actions/package-rpi-image@main
      with:
        image_path: "build/${{ env.IMAGE_NAME }}"

    - name: "Create release & attach assets"
      uses: softprops/action-gh-release@v1
      #if: github.event_name == 'repository_dispatch'
      with:
        name: "testing" #"${{ env.RELEASE_NAME }}"
        tag_name: "testing-tag" #"${{ env.RELEASE_TAG }}"
        body_path: "build/release.md"
        prerelease: false #${{ contains(env.PIOREACTOR_VERSION, 'rc') }}
        fail_on_unmatched_files: true
        files: |
          build/${{ env.IMAGE_NAME_ZIP }}
          build/${{ env.IMAGE_NAME_ZIP }}.md5
          build/${{ env.IMAGE_NAME_ZIP }}.sha256
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
